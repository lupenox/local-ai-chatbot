{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import axios from\"axios\";import{FaMicrophone,FaSun,FaMoon}from\"react-icons/fa\";import\"./index.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[input,setInput]=useState(\"\");const[messages,setMessages]=useState([]);const[darkMode,setDarkMode]=useState(false);const chatEndRef=useRef(null);useEffect(()=>{var _chatEndRef$current;(_chatEndRef$current=chatEndRef.current)===null||_chatEndRef$current===void 0?void 0:_chatEndRef$current.scrollIntoView({behavior:\"smooth\"});},[messages]);const sendMessage=async()=>{if(!input.trim())return;const newMessages=[...messages,{text:input,sender:\"user\"}];setMessages(newMessages);setInput(\"\");try{const response=await axios.post(\"http://localhost:5001/chat\",{message:input});setMessages([...newMessages,{text:response.data.response,sender:\"bot\"}]);}catch(error){setMessages([...newMessages,{text:\"Error connecting to AI\",sender:\"bot\"}]);}};const handleSpeechInput=()=>{const recognition=new(window.SpeechRecognition||window.webkitSpeechRecognition)();recognition.onresult=event=>{setInput(event.results[0][0].transcript);};recognition.start();};return/*#__PURE__*/_jsxs(\"div\",{className:`app-container ${darkMode?\"dark-mode\":\"\"}`,children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:()=>setDarkMode(!darkMode),children:darkMode?/*#__PURE__*/_jsx(FaSun,{}):/*#__PURE__*/_jsx(FaMoon,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Local AI Chatbot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-history\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(\"p\",{className:`message ${msg.sender}`,children:msg.text},index)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"mic-btn\",onClick:handleSpeechInput,children:/*#__PURE__*/_jsx(FaMicrophone,{})}),/*#__PURE__*/_jsx(\"input\",{value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage(),placeholder:\"Type or say your message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send-btn\",onClick:sendMessage,children:\"Send\"})]})]})]});}export default App;","map":{"version":3,"names":["useState","useEffect","useRef","axios","FaMicrophone","FaSun","FaMoon","jsx","_jsx","jsxs","_jsxs","App","input","setInput","messages","setMessages","darkMode","setDarkMode","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","newMessages","text","sender","response","post","message","data","error","handleSpeechInput","recognition","window","SpeechRecognition","webkitSpeechRecognition","onresult","event","results","transcript","start","className","children","onClick","map","msg","index","ref","value","onChange","e","target","onKeyDown","key","placeholder"],"sources":["/home/logan-lapierre/Desktop/personal_projects/local-ai-chatbot/desktop-ui/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { FaMicrophone, FaSun, FaMoon } from \"react-icons/fa\";\nimport \"./index.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    try {\n      const response = await axios.post(\"http://localhost:5001/chat\", {\n        message: input,\n      });\n\n      setMessages([...newMessages, { text: response.data.response, sender: \"bot\" }]);\n    } catch (error) {\n      setMessages([...newMessages, { text: \"Error connecting to AI\", sender: \"bot\" }]);\n    }\n  };\n\n  const handleSpeechInput = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.onresult = (event) => {\n      setInput(event.results[0][0].transcript);\n    };\n    recognition.start();\n  };\n\n  return (\n    <div className={`app-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n      <button className=\"theme-toggle\" onClick={() => setDarkMode(!darkMode)}>\n        {darkMode ? <FaSun /> : <FaMoon />}\n      </button>\n\n      <div className=\"chat-box\">\n        <h1>Local AI Chatbot</h1>\n        <div className=\"chat-history\">\n          {messages.map((msg, index) => (\n            <p key={index} className={`message ${msg.sender}`}>\n              {msg.text}\n            </p>\n          ))}\n          <div ref={chatEndRef} />\n        </div>\n\n        <div className=\"input-container\">\n          <button className=\"mic-btn\" onClick={handleSpeechInput}>\n            <FaMicrophone />\n          </button>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n            placeholder=\"Type or say your message...\"\n          />\n          <button className=\"send-btn\" onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACnD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,CAAEC,KAAK,CAAEC,MAAM,KAAQ,gBAAgB,CAC5D,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAAkB,UAAU,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAE/BD,SAAS,CAAC,IAAM,KAAAkB,mBAAA,CACd,CAAAA,mBAAA,CAAAD,UAAU,CAACE,OAAO,UAAAD,mBAAA,iBAAlBA,mBAAA,CAAoBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAC5D,CAAC,CAAE,CAACR,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAS,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACX,KAAK,CAACY,IAAI,CAAC,CAAC,CAAE,OAEnB,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGX,QAAQ,CAAE,CAAEY,IAAI,CAAEd,KAAK,CAAEe,MAAM,CAAE,MAAO,CAAC,CAAC,CAClEZ,WAAW,CAACU,WAAW,CAAC,CACxBZ,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAI,CACF,KAAM,CAAAe,QAAQ,CAAG,KAAM,CAAAzB,KAAK,CAAC0B,IAAI,CAAC,4BAA4B,CAAE,CAC9DC,OAAO,CAAElB,KACX,CAAC,CAAC,CAEFG,WAAW,CAAC,CAAC,GAAGU,WAAW,CAAE,CAAEC,IAAI,CAAEE,QAAQ,CAACG,IAAI,CAACH,QAAQ,CAAED,MAAM,CAAE,KAAM,CAAC,CAAC,CAAC,CAChF,CAAE,MAAOK,KAAK,CAAE,CACdjB,WAAW,CAAC,CAAC,GAAGU,WAAW,CAAE,CAAEC,IAAI,CAAE,wBAAwB,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CAAC,CAClF,CACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,WAAW,CAAG,IAAKC,MAAM,CAACC,iBAAiB,EAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC,CACtFH,WAAW,CAACI,QAAQ,CAAIC,KAAK,EAAK,CAChC1B,QAAQ,CAAC0B,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,CAC1C,CAAC,CACDP,WAAW,CAACQ,KAAK,CAAC,CAAC,CACrB,CAAC,CAED,mBACEhC,KAAA,QAAKiC,SAAS,CAAE,iBAAiB3B,QAAQ,CAAG,WAAW,CAAG,EAAE,EAAG,CAAA4B,QAAA,eAC7DpC,IAAA,WAAQmC,SAAS,CAAC,cAAc,CAACE,OAAO,CAAEA,CAAA,GAAM5B,WAAW,CAAC,CAACD,QAAQ,CAAE,CAAA4B,QAAA,CACpE5B,QAAQ,cAAGR,IAAA,CAACH,KAAK,GAAE,CAAC,cAAGG,IAAA,CAACF,MAAM,GAAE,CAAC,CAC5B,CAAC,cAETI,KAAA,QAAKiC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBpC,IAAA,OAAAoC,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBlC,KAAA,QAAKiC,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC1B9B,QAAQ,CAACgC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvBxC,IAAA,MAAemC,SAAS,CAAE,WAAWI,GAAG,CAACpB,MAAM,EAAG,CAAAiB,QAAA,CAC/CG,GAAG,CAACrB,IAAI,EADHsB,KAEL,CACJ,CAAC,cACFxC,IAAA,QAAKyC,GAAG,CAAE/B,UAAW,CAAE,CAAC,EACrB,CAAC,cAENR,KAAA,QAAKiC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpC,IAAA,WAAQmC,SAAS,CAAC,SAAS,CAACE,OAAO,CAAEZ,iBAAkB,CAAAW,QAAA,cACrDpC,IAAA,CAACJ,YAAY,GAAE,CAAC,CACV,CAAC,cACTI,IAAA,UACE0C,KAAK,CAAEtC,KAAM,CACbuC,QAAQ,CAAGC,CAAC,EAAKvC,QAAQ,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,SAAS,CAAGF,CAAC,EAAKA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAIhC,WAAW,CAAC,CAAE,CACrDiC,WAAW,CAAC,6BAA6B,CAC1C,CAAC,cACFhD,IAAA,WAAQmC,SAAS,CAAC,UAAU,CAACE,OAAO,CAAEtB,WAAY,CAAAqB,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC7D,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAjC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}